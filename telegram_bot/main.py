import asyncio
import logging

from aiogram import Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from bot_instance import bot
from handlers import user_handlers, pick_handlers
from confige import BotConfig


def register_routers(dp: Dispatcher) -> None:
    """Registers routers"""
    dp.include_routers(user_handlers.router, pick_handlers.router)


async def main() -> None:
    """Entry point of the program."""

    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(name)s - %(message)s",
    )

    dp = Dispatcher(storage=MemoryStorage())
    config = BotConfig(
        admin_ids=[52786051],
        welcome_message="<b>–ü—Ä–∏–≤–µ—Ç! –Ø –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∏—Å—Ö–æ–¥–∞ –º–∞—Ç—á–∞ –ø–æ –ø–∏–∫–∞–º.</b> \n\n"
                        "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: \n"
                        "/dice - –∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫ üé≤ \n"
                        "/info - –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ \n"
                        "/help - –ø–æ–º–æ—â—å \n"
                        "/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"
    )
    dp["config"] = config

    register_routers(dp)

    await bot.delete_webhook(drop_pending_updates=True)

    try:
        await dp.start_polling(bot, skip_updates=True)
    except Exception as _ex:
        print(f'Exception: {_ex}')


if __name__ == '__main__':
    asyncio.run(main())
